# -*- coding: utf-8 -*-
"""sentiment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V75Ww5T9kW6eXMn0eTDMGPDcYI7JGSn3
"""

import string
from collections import Counter

import matplotlib.pyplot as plt

# reading text file
text = open("list.txt").read()

# converting to lowercase
lower_case = text.lower()

# Removing punctuations
cleaned_text = lower_case.translate(str.maketrans('', '', string.punctuation))

# splitting text into words
tokenized_words = cleaned_text.split()

stop_words = ["i", "me", "my", "myself", "we", "our", "ours", "ourselves", "you", "your", "yours", "yourself",
              "yourselves", "he", "him", "his", "himself", "she", "her", "hers", "herself", "it", "its", "itself",
              "they", "them", "their", "theirs", "themselves", "what", "which", "who", "whom", "this", "that", "these",
              "those", "am", "is", "are", "was", "were", "be", "been", "being", "have", "has", "had", "having", "do",
              "does", "did", "doing", "a", "an", "the", "and", "but", "if", "or", "because", "as", "until", "while",
              "of", "at", "by", "for", "with", "about", "against", "between", "into", "through", "during", "before",
              "after", "above", "below", "to", "from", "up", "down", "in", "out", "on", "off", "over", "under", "again",
              "further", "then", "once", "here", "there", "when", "where", "why", "how", "all", "any", "both", "each",
              "few", "more", "most", "other", "some", "such", "no", "nor", "not", "only", "own", "same", "so", "than",
              "too", "very", "s", "t", "can", "will", "just", "don", "should", "now"]

# Removing stop words from the tokenized words list
final_words = []
for word in tokenized_words:
    if word not in stop_words:
        final_words.append(word)

# NLP Emotion Algorithm
# 1) Check if the word in the final word list is also present in emotion.txt
#  - open the emotion file
#  - Loop through each line and clear it
#  - Extract the word and emotion using split

# 2) If word is present -> Add the emotion to emotion_list
# 3) Finally count each emotion in the emotion list
emotion = {
    # General Support Terms
    'modi': 'support', 'bjp': 'support', 'win': 'support', 'victory': 'support', 'trust': 'support',
    'success': 'support', 'coalition': 'support', 'nda': 'support', 'people power': 'support',

    # Criticism Terms
    'defeat': 'criticism', 'lose': 'criticism', 'corruption': 'criticism', 'polarisation': 'criticism',
    'failure': 'criticism', 'criticism': 'criticism', 'fraud': 'criticism', 'bribery': 'criticism',
    'conspiracy': 'criticism', 'unfair': 'criticism', 'fake': 'criticism', 'fear': 'criticism',

    # Mixed Sentiments
    'hope': 'mixed sentiment', 'optimism': 'mixed sentiment', 'concern': 'mixed sentiment',
    'uncertainty': 'mixed sentiment', 'doubt': 'mixed sentiment', 'expectation': 'mixed sentiment',
    'confidence': 'mixed sentiment', 'public trust': 'mixed sentiment', 'vitality': 'mixed sentiment',
    'diversity': 'mixed sentiment', 'federalism': 'mixed sentiment', 'livelihood': 'mixed sentiment',
    'inflation': 'mixed sentiment', 'unemployment': 'mixed sentiment',

    # Neutral Political Terms
    'candidate': 'neutral', 'voters': 'neutral', 'turnout': 'neutral', 'poll': 'neutral',
    'election': 'neutral', 'campaign': 'neutral', 'result': 'neutral', 'party': 'neutral',
    'coalition government': 'neutral', 'democracy': 'neutral', 'public': 'neutral'
}



emotion_list = []
for word, emotion in emotion.items(): #Changed line to iterate over key,value pairs in the emotion dictionary
    if word in final_words:
        emotion_list.append(emotion)


w = Counter(emotion_list)
print(w)

# Plotting the emotions on the graph

fig, ax1 = plt.subplots()
ax1.bar(w.keys(), w.values())
plt.xlabel("sentiments")
plt.ylabel("no. of sentiments")
plt.title("EMOTIONS ON RESULTS OF LOK SABHA ELECTION")
plt.savefig('graph.png')
plt.show()

import string
from collections import Counter
import matplotlib.pyplot as plt

# Reading text file
text_content = open("/content/Copy of lok_sabhaa.txt").read()

# Converting to lowercase
lower_text = text_content.lower()

# Removing punctuation
cleaned_text = lower_text.translate(str.maketrans('', '', string.punctuation))

# Splitting text into words
words = cleaned_text.split()

# List of stop words
stop_words = ["i", "me", "my", "myself", "we", "our", "ours", "ourselves", "you", "your", "yours", "yourself",
              "yourselves", "he", "him", "his", "himself", "she", "her", "hers", "herself", "it", "its", "itself",
              "they", "them", "their", "theirs", "themselves", "what", "which", "who", "whom", "this", "that", "these",
              "those", "am", "is", "are", "was", "were", "be", "been", "being", "have", "has", "had", "having", "do",
              "does", "did", "doing", "a", "an", "the", "and", "but", "if", "or", "because", "as", "until", "while",
              "of", "at", "by", "for", "with", "about", "against", "between", "into", "through", "during", "before",
              "after", "above", "below", "to", "from", "up", "down", "in", "out", "on", "off", "over", "under", "again",
              "further", "then", "once", "here", "there", "when", "where", "why", "how", "all", "any", "both", "each",
              "few", "more", "most", "other", "some", "such", "no", "nor", "not", "only", "own", "same", "so", "than",
              "too", "very", "s", "t", "can", "will", "just", "don", "should", "now"]

# Filtering out stop words
filtered_words = [word for word in words if word not in stop_words]

# Emotion dictionary for categorizing words
sentiment_dict = {
     # BJP and Allies (Positive Sentiment)
    'modi': 'bjp', 'bjp win': 'bjp', 'narendra modi': 'bjp', 'trust modi': 'bjp',
    'jai ho modi ji': 'bjp', 'super fast express modi': 'bjp', 'bjp the best': 'bjp',
    'vote for modi': 'bjp', 'namo again': 'bjp', 'only modi for india': 'bjp',
    'proud of modi': 'bjp', 'modi government success': 'bjp', 'nda victory': 'bjp',
    'bjp majority': 'bjp', 'support bjp policies': 'bjp', 'rise of bjp': 'bjp',
    'modi is great leader': 'bjp', 'jai shri ram': 'bjp', 'bjp rocks': 'bjp',
    'bjp landslide': 'bjp', 'bjp will win': 'bjp', 'modi ji again': 'bjp',
    'india needs modi': 'bjp', 'vote for strong government bjp': 'bjp',

    # Anti-BJP Sentiment
    'bjp defeat': 'anti-bjp', 'modi lose': 'anti-bjp', 'fake government': 'anti-bjp',
    'bjp is a thief': 'anti-bjp', 'bjp criticized': 'anti-bjp', 'bjp failure': 'anti-bjp',
    'untrustworthy modi': 'anti-bjp', 'bjp corruption': 'anti-bjp', 'modi is a liar': 'anti-bjp',
    'bjp downfall': 'anti-bjp', 'anti-incumbency against bjp': 'anti-bjp', 'bjp losing support': 'anti-bjp',
    'no more modi': 'anti-bjp', 'not modi': 'anti-bjp', 'bjp cheating': 'anti-bjp',
    'bjp is thief': 'anti-bjp', 'no modi government': 'anti-bjp', 'bjp fraud': 'anti-bjp',

    # Congress and Allies (Positive Sentiment)
    'rahul gandhi win': 'congress', 'congress lead': 'congress', 'congress gains': 'congress',
    'ashok gehlot': 'congress', 'priyanka gandhi': 'congress', 'rahul comeback': 'congress',
    'trust rahul': 'congress', 'back congress': 'congress', 'vote for congress': 'congress',
    'congress in majority': 'congress', 'rahul gandhi next pm': 'congress', 'congress victory': 'congress',
    'long live congress': 'congress', 'india supports rahul': 'congress', 'rahul ji voice of poor': 'congress',
    'congress for democracy': 'congress', 'support congress policies': 'congress',

    # Anti-Congress Sentiment
    'congress defeat': 'anti-congress', 'rahul failed': 'anti-congress', 'sonia criticized': 'anti-congress',
    'congress setback': 'anti-congress', 'upa crisis': 'anti-congress', 'congress letdown': 'anti-congress',
    'congress corruption': 'anti-congress', 'loss for congress': 'anti-congress', 'anti-congress sentiment': 'anti-congress',
    'pappu': 'anti-congress', 'rahul is joke': 'anti-congress', 'congress scam': 'anti-congress',
    'corrupt congress': 'anti-congress', 'no to congress': 'anti-congress',

    # AAP and Allies
    'aap win': 'aap', 'arvind kejriwal': 'aap', 'kejriwal support': 'aap', 'aap growing': 'aap',
    'trust kejriwal': 'aap', 'vote for aap': 'aap', 'aap gains': 'aap', 'kejriwal government': 'aap',
    'aap majority': 'aap', 'aap progress': 'aap', 'aap influence': 'aap', 'rise of aap': 'aap',

    # Anti-AAP Sentiment
    'aap defeat': 'anti-aap', 'kejriwal lose': 'anti-aap', 'aap setback': 'anti-aap',
    'aap criticized': 'anti-aap', 'kejriwal scandal': 'anti-aap', 'aap corruption': 'anti-aap',
    'aap failure': 'anti-aap', 'loss for aap': 'anti-aap', 'anti-aap sentiment': 'anti-aap',

    # Neutral Terms
    'candidate': 'neutral', 'nominee': 'neutral', 'voters': 'neutral', 'turnout': 'neutral',
    'polls': 'neutral', 'survey': 'neutral', 'agenda': 'neutral', 'manifesto': 'neutral',
    'election': 'neutral', 'party member': 'neutral', 'campaign': 'neutral', 'voter base': 'neutral',
    'public opinion': 'neutral', 'exit poll': 'neutral', 'opposition': 'neutral',

    # Mixed or Complex Sentiments
    'hope': 'mixed', 'optimism': 'mixed', 'fear': 'mixed', 'worry': 'mixed',
    'concern': 'mixed', 'uncertainty': 'mixed', 'doubt': 'mixed', 'public dissatisfaction': 'mixed',
    'support shift': 'mixed', 'protest against party': 'mixed', 'anti-incumbency wave': 'mixed',
    'unclear support': 'mixed', 'voter apathy': 'mixed'
}
# List to store detected sentiments
detected_sentiments = []
for word, sentiment in sentiment_dict.items():  # Iterate over key, value pairs in sentiment_dict
    if word in filtered_words:
        detected_sentiments.append(sentiment)

# Counting occurrences of each sentiment
sentiment_counts = Counter(detected_sentiments)
print(sentiment_counts)

# Plotting the sentiments on a bar graph
fig, ax = plt.subplots()
ax.bar(sentiment_counts.keys(), sentiment_counts.values())
plt.xlabel("Sentiments")
plt.ylabel("Number of Sentiments")
plt.title("Analysis of election based on diffrent parties")
plt.savefig('sentiment_graph.png')
plt.show()